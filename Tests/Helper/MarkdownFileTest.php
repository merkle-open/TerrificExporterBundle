<?php
namespace Terrific\ExporterBundle\Tests\Filter {
    use Terrific\ExporterBundle\Renderer\Document\MarkdownFile;

    /**
     * Generated by PHPUnit_SkeletonGenerator on 2012-09-08 at 09:30:13.
     */
    class MarkdownFileTest extends \PHPUnit_Framework_TestCase {

        /** @var MarkdownFile */
        private $object;

        /**
         * Sets up the fixture, for example, opens a network connection.
         * This method is called before a test is executed.
         */
        protected function setUp() {
            $this->object = new MarkdownFile();
        }

        /**
         * Tears down the fixture, for example, closes a network connection.
         * This method is called after a test is executed.
         */
        protected function tearDown() {
        }


        /**
         * @covers AsseticHelper::retrieveFonts()
         */
        public function testH1() {
            $this->object->section("Test");

            $this->assertEquals($this->object->getContent(), "# Test\n\n");
        }

        /**
         *
         */
        public function testH2() {
            $this->object->subsection("Test");

            $this->assertEquals($this->object->getContent(), "## Test\n\n");
        }

        /**
         *
         */
        public function testH3() {
            $this->object->subsubsection("Test");

            $this->assertEquals($this->object->getContent(), "### Test\n\n");
        }

        /**
         *
         */
        public function testH4() {
            $this->object->paragraph("Test");

            $this->assertEquals($this->object->getContent(), "#### Test\n\n");
        }


        /**
         *
         */
        public function testAddList() {
            $this->object->addList(array("item 1", "item 2"));

            $this->assertEquals("-   item 1\n-   item 2\n\n", $this->object->getContent());

            $this->object->clear();
            $this->object->addList(array("item 1", "item 2"), "+");
            $this->assertEquals("+   item 1\n+   item 2\n\n", $this->object->getContent());

            $this->object->clear();
            $this->object->addList(array("item 1", "item 2"), "*");
            $this->assertEquals("*   item 1\n*   item 2\n\n", $this->object->getContent());

            $this->object->clear();
            $this->object->addList(array("item 1", "item 2"), "1");
            $this->assertEquals("1.  item 1\n2.  item 2\n\n", $this->object->getContent());

            $this->object->clear();
            $uwText = "Bavaria ipsum dolor sit amet muass guad wiavui griaß God beinand a bissal. Woibbadinga von naa gwiss Engelgwand! Diandldrahn gwiss a bissal eam des is schee do legst di nieda Schuabladdla Kirwa, Freibia Sauwedda.";
            $text = \Terrific\ExporterBundle\Helper\StringHelper::lineWrap($uwText, 80, "\n    ");
            $this->object->addList(array($uwText, "item 2"), "1");
            $this->assertEquals("1.  ${text}\n2.  item 2\n\n", $this->object->getContent());

        }

        public function testBlock() {
            $this->object->block("Testblock");

            $this->assertEquals($this->object->getContent(), "Testblock\n\n");
        }

        /**
         *
         */
        public function testContent() {
            $content = "# Headline1\n\n## Headline2\n\n### Headline3\n\n#### Headline4\n\n";
            $this->object->section("Headline1")->subsection("Headline2")->subsubsection("Headline3")->paragraph("Headline4");

            $this->assertEquals($content, $this->object->getContent());

            $content .= \Terrific\ExporterBundle\Helper\StringHelper::lineWrap("Badwaschl, oida Schlawina, Stodara, Kittlschliaffa, Zuchtl, Herrgoddsacklzementfixlujja, Zwedschgarl, Lätschnbebbi, Nasnboara, gwampate Sau, Scheißbürschdl, Freibialädschn, glei fangst a boa, schau, dass di schleichst, Hundsbua, krummhaxata Goaßbog, varreckta Deifi, Goggolore, Zwedschgndatschi, hoit dei damische Goschn, Schuibuamtratza, gscheada Saubreiß, i glaub, dir brennt da Huat, gscherta Hamml, hoit’s Mei, Oasch, Grischbal, Apruiaff, Grantla, Fegeisen, Blasengl, Broatarsch, Schwindsüchtl, Kittlschliaffa, Grattla, Zwedschgnmanndl, Pritschn, Doafmatratzn, Schnoin, Knedlfressa, Schleimscheißa, Kreizdeifi, Eignbrödla, Schwindsüchtl, gscheada Saubreiß, Hosnscheissa, Kamejtreiba, Neidhamml, Drottl, Kircharutschn!", 80, "\n    ") . "\n\n";
            $this->object->block("Badwaschl, oida Schlawina, Stodara, Kittlschliaffa, Zuchtl, Herrgoddsacklzementfixlujja, Zwedschgarl, Lätschnbebbi, Nasnboara, gwampate Sau, Scheißbürschdl, Freibialädschn, glei fangst a boa, schau, dass di schleichst, Hundsbua, krummhaxata Goaßbog, varreckta Deifi, Goggolore, Zwedschgndatschi, hoit dei damische Goschn, Schuibuamtratza, gscheada Saubreiß, i glaub, dir brennt da Huat, gscherta Hamml, hoit’s Mei, Oasch, Grischbal, Apruiaff, Grantla, Fegeisen, Blasengl, Broatarsch, Schwindsüchtl, Kittlschliaffa, Grattla, Zwedschgnmanndl, Pritschn, Doafmatratzn, Schnoin, Knedlfressa, Schleimscheißa, Kreizdeifi, Eignbrödla, Schwindsüchtl, gscheada Saubreiß, Hosnscheissa, Kamejtreiba, Neidhamml, Drottl, Kircharutschn!");

            $this->assertEquals($content, $this->object->getContent());

            $content .= \Terrific\ExporterBundle\Helper\StringHelper::lineWrap("Umma wiavui ned a i moan oiwei owe, o’ha kumm geh oamoi Landla. Foidweg mogsd a Bussal Hemad obandln, is wea ko, dea ko dahoam Mongdratzal Haferl?");
            $this->object->text("Umma wiavui ned a i moan oiwei owe, o’ha kumm geh oamoi Landla. Foidweg mogsd a Bussal Hemad obandln, is wea ko, dea ko dahoam Mongdratzal Haferl?");
            $this->assertEquals($content, $this->object->getContent());

            $content .= "\n\n[Testlink](http://www.google.de)";
            $this->object->rawText("\n\n")->link("http://www.google.de", "Testlink");
            $this->assertEquals($content, $this->object->getContent());

            $content .= "\n\n[http://www.namics.com](http://www.namics.com)";
            $this->object->rawText("\n\n")->link("http://www.namics.com");
            $this->assertEquals($content, $this->object->getContent());
        }

    }
}
